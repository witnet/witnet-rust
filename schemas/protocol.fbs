// Draft of initial proposal for lightweight connection protocol
// ubyte(8) / ushort(16) / uint(32) / ulong(64)
namespace Protocol;

/////////////////////////////////////////////////////////
// MAIN TYPES
/////////////////////////////////////////////////////////
// List of available commands
union Command (required) { Version, Verack, GetPeers, Peers, Ping, Pong, Block, Inv, GetData }

// Message format with header
table Message {
    magic: uint16;
    command: Command (required);
}

/////////////////////////////////////////////////////////
// AUXILIARY TYPES
/////////////////////////////////////////////////////////
union IpAddress { Ipv4, Ipv6 }

table Ipv4 {
    ip: uint32;
}

table Ipv6 {
    ip0: uint32;
    ip1: uint32;
    ip2: uint32;
    ip3: uint32;
}

table Address {
    ip: IpAddress;
    port: uint16;
}

enum HashType: ubyte {
    SHA256,
}

table Hash {
    type: HashType;
    bytes: [ubyte] (required);
}

enum InvElemType: uint8 {
    Error = 0,
    Tx,
    Block,
    DataRequest,
    DataResult
}

table InvElem {
    type: InvElemType;
    hash: Hash (required);
}

table Secp256k1Signature {
    r: [ubyte] (required);
    s: [ubyte] (required);
}

union Signature { Secp256k1Signature }

table LeadershipProof {
    block_sig: Signature;
    influence: uint64;
}

table CheckpointBeacon {
    checkpoint: uint32;
    hash_prev_block: Hash (required);
}

table BlockHeader {
    version: uint32;
    beacon: CheckpointBeacon (required);
    hash_merkle_root: Hash (required);
    proof: LeadershipProof (required);
}

/////////////////////////////////////////////////////////
// PROTOCOL MESSAGES
/////////////////////////////////////////////////////////
table Version {
    version: uint32;
    timestamp: int64;
    capabilities: uint64;
    sender_address: Address;
    receiver_address: Address;
    user_agent: string (required);
    last_epoch: uint32;
    genesis: uint64;
    nonce: uint64;
}

table Verack {
}

table GetPeers {
}

table Peers {
    peers: [Address];
}

table Ping {
    nonce: uint64;
}

table Pong {
    nonce: uint64;
}

// FIXME(#99): define Transaction as defined in issue
table Transaction {}

table Block {
    header: BlockHeader (required);
    txn_count: uint32;
    txns: [Transaction] (required);
}

table Inv {
    inventory: [InvElem] (required);
}

table GetData {
    inventory: [InvElem] (required);
}
root_type Message;